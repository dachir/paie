[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2022-10-13 11:49:18.221149",
  "module": null,
  "name": "Get Employee Category Details",
  "script": "frappe.ui.form.on('Employee', {\n\temployee_category_details(frm) {\n\t\t// your code here\n\t\tfrappe.db.get_doc(\"Employee Category Details\", frm.doc.employee_category_details).then(r => {\n\t\t    //alert(r.conge_days);\n\t\t    frm.doc.conge_days = r.conge_days;\n\t\t    //frm.doc.conge_days_5_years = r.conge_days_5_years;\n    \t\tfrm.doc.basic_salary_per_day = r.basic_salary_per_day;\n    \t\tfrm.doc.basic_salary_per_hour = r.basic_salary_per_hour;\n    \t\tfrm.doc.logement = r.logement;\n    \t\tfrm.doc.transport = r.transport;\n    \t\tfrm.doc.conge_days_final_settlement = r.conge_days_final_settlement;\n    \t\tfrm.doc.conge_year_final_settlement = r.conge_year_final_settlement;\n    \t\tfrm.dirty();\n\t\t    frm.refresh();\n\t\t});\n\t}\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance list",
  "enabled": 0,
  "modified": "2022-10-14 10:20:04.930843",
  "module": null,
  "name": "Attendance list-Form",
  "script": "frappe.ui.form.on('Attendance list', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\nfrappe.ui.form.on('Attendace Details', {\n    form_render: function(frm,cdt,cdn) {\n       let item = locals[cdt][cdn]; \n       let pay_period = `Payroll Period`.pay_period;\n       item.pay_period = pay_period;\n       frm.refresh_field('Attendace Details');\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Entry",
  "enabled": 0,
  "modified": "2022-10-19 12:28:03.690732",
  "module": null,
  "name": "Override Payroll Entry",
  "script": "// Copyright (c) 2017, Frappe Technologies Pvt. Ltd. and contributors\r\n// For license information, please see license.txt\r\n\r\nvar in_progress = false;\r\n\r\nfrappe.provide(\"erpnext.accounts.dimensions\");\r\n\r\nfrappe.ui.form.on('Payroll Entry', {\r\n\tonload: function (frm) {\r\n\t\tif (!frm.doc.posting_date) {\r\n\t\t\tfrm.doc.posting_date = frappe.datetime.nowdate();\r\n\t\t}\r\n\t\tfrm.toggle_reqd(['payroll_frequency'], !frm.doc.salary_slip_based_on_timesheet);\r\n\r\n\t\terpnext.accounts.dimensions.setup_dimension_filters(frm, frm.doctype);\r\n\t\tfrm.events.department_filters(frm);\r\n\t\tfrm.events.payroll_payable_account_filters(frm);\r\n\t},\r\n\r\n\tdepartment_filters: function (frm) {\r\n\t\tfrm.set_query(\"department\", function () {\r\n\t\t\treturn {\r\n\t\t\t\t\"filters\": {\r\n\t\t\t\t\t\"company\": frm.doc.company,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\r\n\tpayroll_payable_account_filters: function (frm) {\r\n\t\tfrm.set_query(\"payroll_payable_account\", function () {\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\t\"company\": frm.doc.company,\r\n\t\t\t\t\t\"root_type\": \"Liability\",\r\n\t\t\t\t\t\"is_group\": 0,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\r\n\trefresh: function (frm) {\r\n\t\tif (frm.doc.docstatus === 0 && !frm.is_new()) {\r\n\t\t\tfrm.page.clear_primary_action();\r\n\t\t\tfrm.add_custom_button(__(\"Get Employees 2\"),\r\n\t\t\t\tfunction () {\r\n\t\t\t\t\tfrm.events.get_employee_details(frm);\r\n\t\t\t\t}\r\n\t\t\t).toggleClass(\"btn-primary\", !(frm.doc.employees || []).length);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(frm.doc.employees || []).length\r\n\t\t\t&& !frappe.model.has_workflow(frm.doctype)\r\n\t\t\t&& !cint(frm.doc.salary_slips_created)\r\n\t\t\t&& (frm.doc.docstatus != 2)\r\n\t\t) {\r\n\t\t\tif (frm.doc.docstatus === 0) {\r\n\t\t\t\tfrm.page.clear_primary_action();\r\n\t\t\t\tfrm.page.set_primary_action(__(\"Create Salary Slips\"), () => {\r\n\t\t\t\t\tfrm.save(\"Submit\").then(() => {\r\n\t\t\t\t\t\tfrm.page.clear_primary_action();\r\n\t\t\t\t\t\tfrm.refresh();\r\n\t\t\t\t\t\tfrm.events.refresh(frm);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else if (frm.doc.docstatus == 1 && frm.doc.status == \"Failed\") {\r\n\t\t\t\tfrm.add_custom_button(__(\"Create Salary Slip\"), function () {\r\n\t\t\t\t\tfrm.call(\"create_salary_slips\", {}, () => {\r\n\t\t\t\t\t\tfrm.reload_doc();\r\n\t\t\t\t\t});\r\n\t\t\t\t}).addClass(\"btn-primary\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (frm.doc.docstatus == 1 && frm.doc.status == \"Submitted\") {\r\n\t\t\tif (frm.custom_buttons) frm.clear_custom_buttons();\r\n\t\t\tfrm.events.add_context_buttons(frm);\r\n\t\t}\r\n\r\n\t\tif (frm.doc.status == \"Failed\" && frm.doc.error_message) {\r\n\t\t\tconst issue = `<a id=\"jump_to_error\" style=\"text-decoration: underline;\">issue</a>`;\r\n\t\t\tlet process = (cint(frm.doc.salary_slips_created)) ? \"submission\" : \"creation\";\r\n\r\n\t\t\tfrm.dashboard.set_headline(\r\n\t\t\t\t__(\"Salary Slip {0} failed. You can resolve the {1} and retry {0}.\", [process, issue])\r\n\t\t\t);\r\n\r\n\t\t\t$(\"#jump_to_error\").on(\"click\", (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tfrappe.utils.scroll_to(\r\n\t\t\t\t\tfrm.get_field(\"error_message\").$wrapper,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\t30\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfrappe.realtime.on(\"completed_salary_slip_creation\", function() {\r\n\t\t\tfrm.reload_doc();\r\n\t\t});\r\n\r\n\t\tfrappe.realtime.on(\"completed_salary_slip_submission\", function() {\r\n\t\t\tfrm.reload_doc();\r\n\t\t});\r\n\t},\r\n\r\n\tget_employee_details: function (frm) {\r\n\t\treturn frappe.call({\r\n\t\t\tdoc: frm.doc,\r\n\t\t\tmethod: 'fill_employee_details',\r\n\t\t}).then(r => {\r\n\t\t\tif (r.docs && r.docs[0].employees) {\r\n\t\t\t\tfrm.employees = r.docs[0].employees;\r\n\t\t\t\tfrm.dirty();\r\n\t\t\t\tfrm.save();\r\n\t\t\t\tfrm.refresh();\r\n\t\t\t\tif (r.docs[0].validate_attendance) {\r\n\t\t\t\t\trender_employee_attendance(frm, r.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tcreate_salary_slips: function (frm) {\r\n\t\tfrm.call({\r\n\t\t\tdoc: frm.doc,\r\n\t\t\tmethod: \"create_salary_slips\",\r\n\t\t\tcallback: function () {\r\n\t\t\t\tfrm.reload_doc();\r\n\t\t\t\tfrm.toolbar.refresh();\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tadd_context_buttons: function (frm) {\r\n\t\tif (frm.doc.salary_slips_submitted || (frm.doc.__onload && frm.doc.__onload.submitted_ss)) {\r\n\t\t\tfrm.events.add_bank_entry_button(frm);\r\n\t\t} else if (frm.doc.salary_slips_created && frm.doc.status != 'Queued') {\r\n\t\t\tfrm.add_custom_button(__(\"Submit Salary Slip\"), function () {\r\n\t\t\t\tsubmit_salary_slip(frm);\r\n\t\t\t}).addClass(\"btn-primary\");\r\n\t\t}\r\n\t},\r\n\r\n\tadd_bank_entry_button: function (frm) {\r\n\t\tfrappe.call({\r\n\t\t\tmethod: 'hrms.payroll.doctype.payroll_entry.payroll_entry.payroll_entry_has_bank_entries',\r\n\t\t\targs: {\r\n\t\t\t\t'name': frm.doc.name\r\n\t\t\t},\r\n\t\t\tcallback: function (r) {\r\n\t\t\t\tif (r.message && !r.message.submitted) {\r\n\t\t\t\t\tfrm.add_custom_button(__(\"Make Bank Entry\"), function () {\r\n\t\t\t\t\t\tmake_bank_entry(frm);\r\n\t\t\t\t\t}).addClass(\"btn-primary\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tsetup: function (frm) {\r\n\t\tfrm.add_fetch('company', 'cost_center', 'cost_center');\r\n\r\n\t\tfrm.set_query(\"payment_account\", function () {\r\n\t\t\tvar account_types = [\"Bank\", \"Cash\"];\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\t\"account_type\": [\"in\", account_types],\r\n\t\t\t\t\t\"is_group\": 0,\r\n\t\t\t\t\t\"company\": frm.doc.company\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tfrm.set_query('employee', 'employees', () => {\r\n\t\t\tlet error_fields = [];\r\n\t\t\tlet mandatory_fields = ['company', 'payroll_frequency', 'start_date', 'end_date'];\r\n\r\n\t\t\tlet message = __('Mandatory fields required in {0}', [__(frm.doc.doctype)]);\r\n\r\n\t\t\tmandatory_fields.forEach(field => {\r\n\t\t\t\tif (!frm.doc[field]) {\r\n\t\t\t\t\terror_fields.push(frappe.unscrub(field));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (error_fields && error_fields.length) {\r\n\t\t\t\tmessage = message + '<br><br><ul><li>' + error_fields.join('</li><li>') + \"</ul>\";\r\n\t\t\t\tfrappe.throw({\r\n\t\t\t\t\tmessage: message,\r\n\t\t\t\t\tindicator: 'red',\r\n\t\t\t\t\ttitle: __('Missing Fields')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tquery: \"hrms.payroll.doctype.payroll_entry.payroll_entry.employee_query\",\r\n\t\t\t\tfilters: frm.events.get_employee_filters(frm)\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\r\n\tget_employee_filters: function (frm) {\r\n\t\tlet filters = {};\r\n\t\tfilters['salary_slip_based_on_timesheet'] = frm.doc.salary_slip_based_on_timesheet;\r\n\r\n\t\tlet fields = ['company', 'start_date', 'end_date', 'payroll_frequency', 'payroll_payable_account',\r\n\t\t\t'currency', 'department', 'branch', 'designation', 'eventual'];\r\n\r\n\t\tfields.forEach(field => {\r\n\t\t\tif (frm.doc[field]) {\r\n\t\t\t\tfilters[field] = frm.doc[field];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (frm.doc.employees) {\r\n\t\t\tlet employees = frm.doc.employees.filter(d => d.employee).map(d => d.employee);\r\n\t\t\tif (employees && employees.length) {\r\n\t\t\t\tfilters['employees'] = employees;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn filters;\r\n\t},\r\n\r\n\tpayroll_frequency: function (frm) {\r\n\t\tfrm.trigger(\"set_start_end_dates\").then( ()=> {\r\n\t\t\tfrm.events.clear_employee_table(frm);\r\n\t\t});\r\n\t},\r\n\r\n\tcompany: function (frm) {\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t\terpnext.accounts.dimensions.update_dimension(frm, frm.doctype);\r\n\t\tfrm.trigger(\"set_payable_account_and_currency\");\r\n\t},\r\n\r\n\tset_payable_account_and_currency: function (frm) {\r\n\t\tfrappe.db.get_value(\"Company\", {\"name\": frm.doc.company}, \"default_currency\", (r) => {\r\n\t\t\tfrm.set_value('currency', r.default_currency);\r\n\t\t});\r\n\t\tfrappe.db.get_value(\"Company\", {\"name\": frm.doc.company}, \"default_payroll_payable_account\", (r) => {\r\n\t\t\tfrm.set_value('payroll_payable_account', r.default_payroll_payable_account);\r\n\t\t});\r\n\t},\r\n\r\n\tcurrency: function (frm) {\r\n\t\tvar company_currency;\r\n\t\tif (!frm.doc.company) {\r\n\t\t\tcompany_currency = erpnext.get_currency(frappe.defaults.get_default(\"Company\"));\r\n\t\t} else {\r\n\t\t\tcompany_currency = erpnext.get_currency(frm.doc.company);\r\n\t\t}\r\n\t\tif (frm.doc.currency) {\r\n\t\t\tif (company_currency != frm.doc.currency) {\r\n\t\t\t\tfrappe.call({\r\n\t\t\t\t\tmethod: \"erpnext.setup.utils.get_exchange_rate\",\r\n\t\t\t\t\targs: {\r\n\t\t\t\t\t\tfrom_currency: frm.doc.currency,\r\n\t\t\t\t\t\tto_currency: company_currency,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcallback: function (r) {\r\n\t\t\t\t\t\tfrm.set_value(\"exchange_rate\", flt(r.message));\r\n\t\t\t\t\t\tfrm.set_df_property('exchange_rate', 'hidden', 0);\r\n\t\t\t\t\t\tfrm.set_df_property(\"exchange_rate\", \"description\", \"1 \" + frm.doc.currency +\r\n\t\t\t\t\t\t\t\" = [?] \" + company_currency);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfrm.set_value(\"exchange_rate\", 1.0);\r\n\t\t\t\tfrm.set_df_property('exchange_rate', 'hidden', 1);\r\n\t\t\t\tfrm.set_df_property(\"exchange_rate\", \"description\", \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tdepartment: function (frm) {\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t},\r\n\r\n\tdesignation: function (frm) {\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t},\r\n\r\n\tbranch: function (frm) {\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t},\r\n\r\n\tstart_date: function (frm) {\r\n\t\tif (!in_progress && frm.doc.start_date) {\r\n\t\t\tfrm.trigger(\"set_end_date\");\r\n\t\t} else {\r\n\t\t\t// reset flag\r\n\t\t\tin_progress = false;\r\n\t\t}\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t},\r\n\r\n\tproject: function (frm) {\r\n\t\tfrm.events.clear_employee_table(frm);\r\n\t},\r\n\r\n\tsalary_slip_based_on_timesheet: function (frm) {\r\n\t\tfrm.toggle_reqd(['payroll_frequency'], !frm.doc.salary_slip_based_on_timesheet);\r\n\t},\r\n\r\n\tset_start_end_dates: function (frm) {\r\n\t\tif (!frm.doc.salary_slip_based_on_timesheet) {\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod: 'hrms.payroll.doctype.payroll_entry.payroll_entry.get_start_end_dates',\r\n\t\t\t\targs: {\r\n\t\t\t\t\tpayroll_frequency: frm.doc.payroll_frequency,\r\n\t\t\t\t\tstart_date: frm.doc.posting_date\r\n\t\t\t\t},\r\n\t\t\t\tcallback: function (r) {\r\n\t\t\t\t\tif (r.message) {\r\n\t\t\t\t\t\tin_progress = true;\r\n\t\t\t\t\t\tfrm.set_value('start_date', r.message.start_date);\r\n\t\t\t\t\t\tfrm.set_value('end_date', r.message.end_date);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tset_end_date: function (frm) {\r\n\t\tfrappe.call({\r\n\t\t\tmethod: 'hrms.payroll.doctype.payroll_entry.payroll_entry.get_end_date',\r\n\t\t\targs: {\r\n\t\t\t\tfrequency: frm.doc.payroll_frequency,\r\n\t\t\t\tstart_date: frm.doc.start_date\r\n\t\t\t},\r\n\t\t\tcallback: function (r) {\r\n\t\t\t\tif (r.message) {\r\n\t\t\t\t\tfrm.set_value('end_date', r.message.end_date);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tvalidate_attendance: function (frm) {\r\n\t\tif (frm.doc.validate_attendance && frm.doc.employees) {\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod: 'validate_employee_attendance',\r\n\t\t\t\targs: {},\r\n\t\t\t\tcallback: function (r) {\r\n\t\t\t\t\trender_employee_attendance(frm, r.message);\r\n\t\t\t\t},\r\n\t\t\t\tdoc: frm.doc,\r\n\t\t\t\tfreeze: true,\r\n\t\t\t\tfreeze_message: __('Validating Employee Attendance...')\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfrm.fields_dict.attendance_detail_html.html(\"\");\r\n\t\t}\r\n\t},\r\n\r\n\tclear_employee_table: function (frm) {\r\n\t\tfrm.clear_table('employees');\r\n\t\tfrm.refresh();\r\n\t},\r\n});\r\n\r\n// Submit salary slips\r\n\r\nconst submit_salary_slip = function (frm) {\r\n\tfrappe.confirm(__('This will submit Salary Slips and create accrual Journal Entry. Do you want to proceed?'),\r\n\t\tfunction () {\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod: 'submit_salary_slips',\r\n\t\t\t\targs: {},\r\n\t\t\t\tcallback: function () {\r\n\t\t\t\t\tfrm.reload_doc();\r\n\t\t\t\t\tfrm.events.refresh(frm);\r\n\t\t\t\t},\r\n\t\t\t\tdoc: frm.doc,\r\n\t\t\t\tfreeze: true,\r\n\t\t\t\tfreeze_message: __('Submitting Salary Slips and creating Journal Entry...')\r\n\t\t\t});\r\n\t\t},\r\n\t\tfunction () {\r\n\t\t\tif (frappe.dom.freeze_count) {\r\n\t\t\t\tfrappe.dom.unfreeze();\r\n\t\t\t\tfrm.events.refresh(frm);\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n};\r\n\r\nlet make_bank_entry = function (frm) {\r\n\tvar doc = frm.doc;\r\n\tif (doc.payment_account) {\r\n\t\treturn frappe.call({\r\n\t\t\tdoc: cur_frm.doc,\r\n\t\t\tmethod: \"make_payment_entry\",\r\n\t\t\tcallback: function () {\r\n\t\t\t\tfrappe.set_route(\r\n\t\t\t\t\t'List', 'Journal Entry', {\r\n\t\t\t\t\t\t\"Journal Entry Account.reference_name\": frm.doc.name\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tfreeze: true,\r\n\t\t\tfreeze_message: __(\"Creating Payment Entries......\")\r\n\t\t});\r\n\t} else {\r\n\t\tfrappe.msgprint(__(\"Payment Account is mandatory\"));\r\n\t\tfrm.scroll_to_field('payment_account');\r\n\t}\r\n};\r\n\r\nlet render_employee_attendance = function (frm, data) {\r\n\tfrm.fields_dict.attendance_detail_html.html(\r\n\t\tfrappe.render_template('employees_to_mark_attendance', {\r\n\t\t\tdata: data\r\n\t\t})\r\n\t);\r\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 1,
  "modified": "2022-10-17 11:30:24.742193",
  "module": null,
  "name": "Salary Slip Update Structure",
  "script": "frappe.ui.form.on('Salary Slip', {\n\tsalary_type(frm) {\n\t\t// your code here\n\t\tfrappe.db.get_value(\"Salary Structure\", {\"salary_type\": frm.doc.salary_type, \"docstatus\": 1}, \"name\", (r) => {\n\t\t\tfrm.set_value('salary_structure', r.name);\n\t\t\tfrm.events.get_emp_and_working_day_details(frm);\n\t\t});\n\t\t//frm.doc.salary_structure \n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee loan Application",
  "enabled": 0,
  "modified": "2022-10-19 14:54:08.973168",
  "module": null,
  "name": "Employee loan Application",
  "script": "frappe.ui.form.on('Employee loan Application', {\n\trefresh(frm) {\n\t\tif (frm.doc.docstatus === 0 && !frm.is_new()) {\n\t\t\tfrm.page.clear_primary_action();\n\t\t\tfrm.add_custom_button(__(\"Get Employees\"),\n\t\t\t\tfunction () {\n\t\t\t\t\t//frm.events.get_employee_details(frm);\n\t\t\t\t}\n\t\t\t).toggleClass(\"btn-primary\", !(frm.doc.employee_details || []).length);\n\t\t}\n\t},\n\t\n\tnumber_of_installments(frm) {\n\t    frm.set_value('installment_amount', 0);\n\t    if(frm.doc.number_of_installments){\n    \t\tif(frm.doc.loan_amount){\n    \t\t    var installment_amount = 0;\n    \t\t    if (frm.doc.number_of_installments > 0) installment_amount = frm.doc.loan_amount / frm.doc.number_of_installments;\n    \t\t    frm.set_value('installment_amount', installment_amount);\n    \t\t}\n\t    }\n\t},\n\t\n\tloan_amount(frm) {\n\t    frm.set_value('installment_amount', 0);\n\t    if(frm.doc.loan_amount){\n    \t\tif(frm.doc.number_of_installments){\n    \t\t    var installment_amount = 0;\n    \t\t    if (frm.doc.number_of_installments > 0) installment_amount = frm.doc.loan_amount / frm.doc.number_of_installments;\n    \t\t    frm.set_value('installment_amount', installment_amount);\n    \t\t}\n\t    }\n\t},\n\t\n\tcurrency: function (frm) {\n\t\tvar company_currency;\n\t\tif (!frm.doc.company) {\n\t\t\tcompany_currency = erpnext.get_currency(frappe.defaults.get_default(\"Company\"));\n\t\t} else {\n\t\t\tcompany_currency = erpnext.get_currency(frm.doc.company);\n\t\t}\n\t\tif (frm.doc.currency) {\n\t\t\tif (company_currency != frm.doc.currency) {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"erpnext.setup.utils.get_exchange_rate\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tfrom_currency: frm.doc.currency,\n\t\t\t\t\t\tto_currency: company_currency,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\tfrm.set_value(\"exchange_rate\", flt(r.message));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfrm.set_value(\"exchange_rate\", 1.0);\n\t\t\t}\n\t\t}\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan",
  "enabled": 1,
  "modified": "2022-10-21 11:33:41.898576",
  "module": null,
  "name": "Get Currency for Loan",
  "script": "frappe.ui.form.on('Loan', {\n\tcurrency: function (frm) {\n\t\tvar company_currency;\n\t\tif (!frm.doc.company) {\n\t\t\tcompany_currency = erpnext.get_currency(frappe.defaults.get_default(\"Company\"));\n\t\t} else {\n\t\t\tcompany_currency = erpnext.get_currency(frm.doc.company);\n\t\t}\n\t\tif (frm.doc.currency) {\n\t\t\tif (company_currency != frm.doc.currency) {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"erpnext.setup.utils.get_exchange_rate\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tfrom_currency: frm.doc.currency,\n\t\t\t\t\t\tto_currency: company_currency,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\tfrm.set_value(\"exchange_rate\", flt(r.message));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfrm.set_value(\"exchange_rate\", 1.0);\n\t\t\t}\n\t\t}\n\t},\n});",
  "view": "Form"
 }
]