[
 {
  "allow_guest": 0,
  "api_method": "get_emp_shift",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-22 17:57:49.155100",
  "module": "Paie Congo",
  "name": "Get Employees Shift",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "frappe.response['message'] = frappe.db.sql(\r\n\t\"\"\"\r\n\t\tselect\r\n\t\t\t\tdistinct t3.employee, t3.log_type, t3.time\r\n\t\t\tfrom\r\n\t\t\t\t`tabEmployee` t1 LEFT JOIN  \r\n\t\t\t\t(SELECT *\r\n\t\t\t\t FROM `tabAttendance` \r\n\t\t\t\t WHERE attendance_date  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)) t2 ON t1.name = t2.employee \r\n\t\t\t\t INNER JOIN `tabEmployee Checkin` t3 ON t1.name = t3.employee \r\n\t\t\twhere\r\n\t\t\t\tt2.employee IS NULL\r\n\t\t\t\tand t1.default_shift IS NULL\r\n\t\t\t\tand t1.status = 'Active'\r\n\t\t\t\tand  CAST(t3.time AS DATE)  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)\r\n\t        \r\n\t\"\"\"\r\n\t,\r\n\tas_dict=True\r\n)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "get_emp_shift_in",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-22 17:57:49.144394",
  "module": "Paie Congo",
  "name": "Get Employees Shift In Only",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "frappe.response['message'] = frappe.db.sql(\r\n\t\"\"\"\r\n\t\tselect\r\n\t\t\t\tdistinct t3.employee, t3.log_type, t3.time\r\n\t\t\tfrom\r\n\t\t\t\t`tabEmployee` t1 LEFT JOIN  \r\n\t\t\t\t(SELECT *\r\n\t\t\t\t FROM `tabAttendance` \r\n\t\t\t\t WHERE attendance_date  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)) t2 ON t1.name = t2.employee \r\n\t\t\t\t INNER JOIN `tabEmployee Checkin` t3 ON t1.name = t3.employee \r\n\t\t\twhere\r\n\t\t\t\tt2.employee IS NULL\r\n\t\t\t\tand t1.default_shift IS NULL\r\n\t\t\t\tand t1.status = 'Active'\r\n\t\t\t\tand  CAST(t3.time AS DATE)  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)\r\n\t\t\t\tand  t3.log_type = 'IN'\r\n\t        \r\n\t\"\"\"\r\n\t,\r\n\tas_dict=True\r\n)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-22 17:57:49.116927",
  "module": "Paie Congo",
  "name": "Test2",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Checkin",
  "script": "#frappe.msgprint(str(frappe.utils.get_datetime('2000-03-18 08:00:01')))\npunch = (doc.time).split(\" \")[1]\npunchdate = (doc.time).split(\" \")[0]\nhour = int(punch.split(\":\")[0])\nlog_type = doc.log_type\nshift_type = doc.shift\nmorningin = range(5,12)\nnightin = range(16,22)\nmorningout = range(16,23)\nnightout = range(7,12)\n\n\nshift_start_time_morning = ' 08:00:01'\nshift_start_morning =punchdate + shift_start_time_morning\nactual_shift_start_time_morning =' 06:00:00'\nactual_shift_start_morning =punchdate + actual_shift_start_time_morning\n\nshift_end_time_morning = ' 18:00:00'\nshift_end_morning = punchdate + shift_end_time_morning\nactual_shift_end_time_morning = ' 22:00:00'\nactual_shift_end_morning = punchdate + actual_shift_end_time_morning\n\nshift_start_time_night = ' 18:00:01'\nshift_start_night = punchdate + shift_start_time_night\nactual_shift_start_time_night = ' 16:00:00'\nactual_shift_start_night = punchdate + actual_shift_start_time_night\n\nshift_end_time_night = ' 08:00:00'\nshift_end_night = punchdate + shift_end_time_night\nactual_shift_end_time_night = ' 12:00:00'\nactual_shift_end_night = punchdate + actual_shift_end_time_night\n\n\n\nif log_type == 'IN' and hour in morningin and shift_type is None:\n    doc.shift = \"Morning\"\n    doc.shift_start = frappe.utils.get_datetime(shift_start_morning)\n    doc.shift_end = frappe.utils.get_datetime(shift_end_morning)\n    doc.shift_actual_start = frappe.utils.get_datetime(actual_shift_start_morning)\n    doc.shift_actual_end = frappe.utils.get_datetime(actual_shift_end_morning)\n    \n    \nelif log_type == 'IN' and hour in nightin and shift_type is None:\n    doc.shift = \"Night\"\n    doc.shift_start = frappe.utils.get_datetime(shift_start_night)\n    doc.shift_end = frappe.utils.get_datetime(shift_end_night)\n    doc.shift_actual_start = frappe.utils.get_datetime(actual_shift_start_night)\n    doc.shift_actual_end = frappe.utils.get_datetime(actual_shift_end_night)\n    \n    \nelif log_type == 'OUT' and hour in morningout and shift_type is None:\n    doc.shift = \"Morning\"\n    doc.shift_start = frappe.utils.get_datetime(shift_start_morning)\n    doc.shift_end = frappe.utils.get_datetime(shift_end_morning)\n    doc.shift_actual_start = frappe.utils.get_datetime(actual_shift_start_morning)\n    doc.shift_actual_end = frappe.utils.get_datetime(actual_shift_end_morning)\n    \n    \nelif log_type == 'OUT' and hour in nightout and shift_type is None:\n    doc.shift = \"Night\"\n    doc.shift_start = frappe.utils.add_to_date(frappe.utils.get_datetime(shift_start_night),days=-1) \n    doc.shift_end = frappe.utils.get_datetime(shift_end_night)\n    doc.shift_actual_start = frappe.utils.add_to_date(frappe.utils.get_datetime(actual_shift_start_night),days=-1)\n    doc.shift_actual_end = frappe.utils.get_datetime(actual_shift_end_night)\n    \n    \n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "test_api",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-22 17:57:49.133454",
  "module": "Paie Congo",
  "name": "test3",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "frappe.response['message'] = frappe.db.sql(\r\n\t\"\"\"\r\n\t\tSELECT t.employee, Max(t.`IN`) AS `IN`, Max(t.`OUT`) AS `OUT`\r\n\t\tFROM(\r\n\t\tselect\r\n\t\t\t\tdistinct t3.employee, t3.time AS `IN`, NULL AS `OUT`\r\n\t\t\tfrom\r\n\t\t\t\t`tabEmployee` t1 LEFT JOIN  \r\n\t\t\t\t(SELECT *\r\n\t\t\t\t FROM `tabAttendance` \r\n\t\t\t\t WHERE attendance_date  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)) t2 ON t1.name = t2.employee \r\n\t\t\t\t INNER JOIN `tabEmployee Checkin` t3 ON t1.name = t3.employee \r\n\t\t\twhere\r\n\t\t\t\tt2.employee IS NULL\r\n\t\t\t\tand t1.default_shift IS NULL\r\n\t\t\t\tand t1.status = 'Active'\r\n\t\t\t\tand  CAST(t3.time AS DATE)  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)\r\n\t\t\t\tand  t3.log_type = 'IN'\r\n\t\tUNION\r\n\t\tselect\r\n\t\t\t\tdistinct t3.employee, NULL AS `IN`, t3.time AS `OUT`\r\n\t\t\tfrom\r\n\t\t\t\t`tabEmployee` t1 LEFT JOIN  \r\n\t\t\t\t(SELECT *\r\n\t\t\t\t FROM `tabAttendance` \r\n\t\t\t\t WHERE attendance_date  = DATE_ADD(CURDATE(), INTERVAL -1 DAY)) t2 ON t1.name = t2.employee \r\n\t\t\t\t INNER JOIN `tabEmployee Checkin` t3 ON t1.name = t3.employee \r\n\t\t\twhere\r\n\t\t\t\tt2.employee IS NULL\r\n\t\t\t\tand t1.default_shift IS NULL\r\n\t\t\t\tand t1.status = 'Active'\r\n\t\t\t\tand  ((CAST(t3.time AS DATE)  >= DATE_ADD(CURDATE(), INTERVAL -1 DAY)\r\n\t\t\t\tand TIME(t3.time) >= TIME('2009-05-18 12:00:57.005678'))\r\n\t\t\t\tor \r\n\t\t\t\t(CAST(t3.time AS DATE)  >= CURDATE()\r\n\t\t\t\tand TIME(t3.time) <= TIME('2009-05-18 12:00:57.005678'))\r\n\t\t\t\t)\r\n\t\t\t\tand  t3.log_type = 'OUT'\r\n\t    ) AS t\r\n\t    GROUP BY t.employee\r\n\t\"\"\"\r\n\t,\r\n\tas_dict=True\r\n)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "get_employee_dependant2",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-22 17:57:49.086759",
  "module": "Paie Congo",
  "name": "Employee Depedant Management API",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "doc = frappe.get_doc('Employee','EMP0004')\n\nfrappe.response['message'] = doc",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-16 20:33:17.332651",
  "module": "Paie Congo",
  "name": "Update Loan Amount",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Loan",
  "script": "#if doc.loan_application and not doc.loan_amount:\r\n#\tdoc.loan_amount = frappe.db.get_value(\"Loan Application\", doc.loan_application, \"loan_amount\")\r\n\t\r\nif not doc.loan_amount:\r\n\tdoc.loan_amount = frappe.utils.flt(doc.loan_amount_in_loan_currency * doc.exchange_rate,2)\r\n\t\t\t\r\n\t\t\t\r\n#if not doc.monthly_repayment_amount:\r\n#\tdoc.monthly_repayment_amount = doc.monthly_repayment_amount_in_loan_currency * doc.exchange_rate\r\n\r\nlp = frappe.get_doc(\"Loan Product\", doc.loan_product)\r\nif not doc.payment_account:\r\n    doc.payment_account = lp.payment_account\r\nif not doc.loan_account:\r\n    doc.loan_account = lp.loan_account\r\nif not doc.interest_income_account:\r\n    doc.interest_income_account = lp.interest_income_account\r\nif not doc.penalty_income_account:\r\n    doc.penalty_income_account = lp.penalty_income_account\r\n    \r\n    ",
  "script_type": "DocType Event"
 }
]